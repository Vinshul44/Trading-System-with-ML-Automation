# -*- coding: utf-8 -*-
"""Ml_modelxg.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KLg27t9IxtqvoPCqxYeKUSG0_bnXzFSo
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from xgboost import XGBClassifier
def compute_macd(close, fast=12, slow=26, signal=9):
    ema_fast = close.ewm(span=fast, adjust=False).mean()
    ema_slow = close.ewm(span=slow, adjust=False).mean()
    macd = ema_fast - ema_slow
    signal_line = macd.ewm(span=signal, adjust=False).mean()
    macd_hist = macd - signal_line
    return macd

def train_model(df):
    df['MACD'] = compute_macd(df['Close'])

    # Create target
    df['Target'] = np.where(df['Close'].shift(-1) > df['Close'], 1, 0)

    features = ['RSI', 'MACD', 'Volume', '20_MA']
    target = 'Target'
    df=df.dropna()

    if df.empty:
        raise ValueError("No valid rows after dropping NaNs.")

    # Prepare training
    X = df[features]
    y = df[target]

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    model = XGBClassifier(use_label_encoder=True, eval_metric='logloss')
    model.fit(X_train, y_train)

    preds = model.predict(X_test)
    acc = accuracy_score(y_test, preds)

    return model, acc