# -*- coding: utf-8 -*-
"""ml_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17reEGiXUXyb33WuhEhwtN52Oi4q4XPK6
"""

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import numpy as np

def train_model(df):
    df = df.copy()

    # Feature engineering (if not already present)
    df['Target'] = np.where(df['Close'].shift(-1) > df['Close'], 1, 0)
    df.dropna(inplace=True)

    # Define features and target
    features = ['RSI', '20_MA', '50_MA', 'Volume']
    if not all(f in df.columns for f in features):
        raise ValueError("Missing required feature columns.")

    X = df[features]
    y = df['Target']

    # ‚ùó Safety check for sample size
    if len(X) < 10:
        raise ValueError(f"Insufficient data for ML training: only {len(X)} samples.")

    # Train-test split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    model = DecisionTreeClassifier()
    model.fit(X_train, y_train)
    preds = model.predict(X_test)
    acc = accuracy_score(y_test, preds)

    return model, acc